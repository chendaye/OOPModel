<?php
/**
 * 当一个请求到的系统时，系统必须能够理解请求中的需求是什么，然后调用适当的业务逻辑进行处理，最后返回响应结果
 * 对简单程序，整个过程可以完全放在视图中；只有重量级的逻辑和持久haunted相关的代码才放在封装好的类库中
 *
 * 视图用来显示数据和让用户生成请求
 *
 * 随着系统的增长，不分层的方案不能满足处理请求，调用业务逻辑和派发视图的要求
 *
 * 视图层 命令、控制层 的边界通常很模糊；两个层通常合称表现层
 */
?>